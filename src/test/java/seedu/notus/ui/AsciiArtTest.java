package seedu.notus.ui;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

import static seedu.notus.ui.AsciiArt.getGoodbyeArt;
import static seedu.notus.ui.AsciiArt.getNotusLogo;
import static seedu.notus.ui.Formatter.LS;

//@@author R-Ramana
public class AsciiArtTest {

    String expectedNotusLogo = LS
            + LS
            + "     .-') _               .-') _                 .-')    "
            + LS
            + "    ( OO ) )             (  OO) )               ( OO ).  "
            + LS
            + ",--./ ,--,'  .-'),-----. /     '._ ,--. ,--.   (_)---\\_) "
            + LS
            + "|   \\ |  |\\ ( OO'  .-.  '|'--...__)|  | |  |   /    _ |  "
            + LS
            + "|    \\|  | )/   |  | |  |'--.  .--'|  | | .-') \\  :` `.  "
            + LS
            + "|  .     |/ \\_) |  | |  |   |  |   |  | |( OO ) '..`''.) "
            + LS
            + "|  |\\    |    \\ |  | |  |   |  |   |  | | `-' /.-._)   \\ "
            + LS
            + "|  | \\   |     `'  '-'  '   |  |  ('  '-'(_.-' \\       / "
            + LS
            + "`--'  `--'       `-----'    `--'    `-----'     `-----'  "
            + LS;

    final String expectedGoodbyeArt = LS
            + ".-. .-')                 ('-.                .,,cccd$$$$$$$$$$$ccc,"
            + LS
            + "\\  ( OO )              _(  OO)           ,cc$$$$$$$$$$$$$$$$$$$$$$$$$cc,"
            + LS
            + ";-----.\\  ,--.   ,--.(,------.         ,d$$$$$$$$$$$$$$$$\"J$$$$$$$$$$$$$$c,"
            + LS
            + "| .-.  |   \\  `.'  /  |  .---'       d$$$$$$$$$$$$$$$$$$,$\" ,,`?$$$$$$$$$$$$L"
            + LS
            + "| '-' /  .-')     /   |  |         ,$$$$$$$$$$$$$$$$$$$$$',J$$$$$$$$$$$$$$$$$b"
            + LS
            + "| .-. `.(OO  \\   /   (|  '--.    ,$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$i `$h"
            + LS
            + "| |  \\  ||   /  /\\_   |  .--'    $$$$$$$$$$$$$$$$$$$$$$$$$P'  \"$$$$$$$$$$$h $$"
            + LS
            + "| '--'  /`-./  /.__)  |  `---.  ;$$$$$$$$$$$$$$$$$$$$$$$$F,$$$h,?$$$$$$$$$$h$F"
            + LS
            + "`------'   `--'       `------' `$$$$$$$$$$$$$$$$$$$$$$$F:??$$$:)$$$$P\",. $$F"
            + LS
            + "                                ?$$$$$$$$$$$$$$$$$$$$$$(   `$$ J$$F\"d$$F,$F"
            + LS
            + "                                 ?$$$$$$$$$$$$$$$$$$$$$h,  :P'J$$F  ,$F,$"
            + LS
            + "                                  ?$$$$$$$$$$$$$$$$$$$$$$$ccd$$`$h, \",d$"
            + LS
            + "                                   \"$$$$$$$$$$$$$$$$$$$$$$$$\",cdc $$$$\""
            + LS
            + "                           ,uu,      `?$$$$$$$$$$$$$$$$$$$$$$$$$$$c$$$$h"
            + LS
            + "                     .,d$$$$$$$cc,   `$$$$$$$$$$$$$$$$??$$$$$$$$$$$$$$$,"
            + LS
            + "                   ,d$$$$$$$$$$$$$$$bcccc,,??$$$$$$ccf `\"??$$$$??$$$$$$$"
            + LS
            + "                  d$$$$$$$$$$$$$$$$$$$$$$$$$h`?$$$$$$h`:...  d$$$$$$$$P"
            + LS
            + "                 d$$$$$$$$$$$$$$$$$$$$$$$$$$$$`$$$$$$$hc,,cd$$$$$$$$P\""
            + LS
            + "             =$$?$$$$$$$$P' ?$$$$$$$$$$$$$$$$$;$$$$$$$$$???????\",,"
            + LS
            + "                =$$$$$$F       `\"?????$$$$$$$$$$$$$$$$$$$$$$$$$$$$$bc"
            + LS
            + "                d$$F\"?$$k ,ccc$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$i"
            + LS
            + "        .     ,ccc$$c`\"\"u$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$P\",$$$$$$$$$$$$h"
            + LS
            + "     ,d$$$L  J$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\" `\"\"$$$??$$$$$$$"
            + LS
            + "   ,d$$$$$$c,\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$F       `?J$$$$$$$'"
            + LS
            + "  ,$$$$$$$$$$h`$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$F           ?$$$$$$$P\"\"=,"
            + LS
            + " ,$$$F?$$$$$$$ $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$F              3$$$$II\"?$h,"
            + LS
            + " $$$$$`$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$P\"               ;$$$??$$$,\"?\""
            + LS
            + " $$$$F ?$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$P\",z'                3$$h   ?$F"
            + LS
            + "        `?$$$$$$$$$$$$$$$??$$$$$$$$$PF\"',d$P\"                  \"?$F"
            + LS
            + "            \"\"\"\"\"\"\"         ,z$$$$$$$$$$$$$P"
            + LS
            + "                                  J$$$$$$$$$$$$$$F"
            + LS
            + "                                 ,$$$$$$$$$$$$$$F"
            + LS
            + "                                 :$$$$$c?$$$$PF'"
            + LS
            + "                                 `$$$$$$$P"
            + LS
            + "                                  `?$$$$F";

    @Test
    void getNotusLogoTest() {

        String actual = getNotusLogo();

        assertEquals(expectedNotusLogo, actual);
    }

    @Test
    void getGoodbyeArtTest() {

        String actual = getGoodbyeArt();

        assertEquals(expectedGoodbyeArt, actual);
    }

}
