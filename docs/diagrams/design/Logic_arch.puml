@startuml

hide circle
skinparam classAttributeIconSize 0
skinparam BoxPadding 20
skinparam shadowing false
scale 1049 width

skinparam package<<Layout>> {
  borderColor Transparent
  backgroundColor Transparent
  fontColor Transparent
  stereotypeFontColor Transparent
}

!define ABSTRACT &#123;abstract&#125;

rectangle LogicManager{
}
rectangle InputManager {
    class CommandPacket {
    }
}

rectangle Logic {


    class ParamChecker <<Singleton>>{

    }


    rectangle CommandHandlers {

    class ParamHandler <<abstract>> {
        requiredParams: HashSet<String>
        paramsSuccessfullyParsed: HashSet<String>
        missingRequiredParams: HashSet<String>
        handleParams()
        checkParseFailedParams()
        handleSingleParam() ABSTRACT
    }
    class XYZCommandHandler <<Singleton>>{
        setRequiredParams()
        handlePacket()
        handleSingleParam()

    }


    XYZCommandHandler --|> ParamHandler
    XYZCommandHandler ..right> "1"  ParamChecker #line:blue;text:black : > Checks validity of params using
    note top of XYZCommandHandler: Includes: \n* FinanceTools Calculator functions\n* EditEntryCommand\n* CreateLedgerCommand\netc.
}

XYZCommandHandler ...> CommandPacket : Processes \ndata from >

LogicManager -> XYZCommandHandler : > Passes CommandPacket to
note top of ParamChecker: Contains methods that \ncheck validity of params supplied\n e.g. check that user has entered\n a valid integer without alphabets\n or decimal point for a param\n which expects int





@enduml