@startuml
autoactivate on

actor User

scale 900 width
skinparam shadowing false
skinparam sequence {
    ActorBorderColor white
    
    ActorBackgroundColor white
    ActorFontColor white
    ActorFontSize 17
    ActorFontName ""
}

box "Data Tracker" #LightYellow
participant ":ManualTracker" as manualTracker <<class>>
endBox

box "Logic" #LightBlue
participant "handler:RetrieveLedgerHandler"
participant ":ParamChecker"
endBox

box "Data" #LightGreen
participant "ledger:Ledger"
participant "ledgerList:LedgerList"
endBox

User-> manualTracker: Delete Ledger

manualTracker ->manualTracker: handleDeleteLedger()
   note left "ledger:Ledger" : "Note: Suppose this ledger instance\n will be referenced then removed."
   manualTracker-> "handler:RetrieveLedgerHandler" : getInstance()
   return handler

   manualTracker-> "handler:RetrieveLedgerHandler" : handlePacket(packet)
        == Handling of Params in packet for retrieval ==
        "handler:RetrieveLedgerHandler" -> "handler:RetrieveLedgerHandler" : handleParams(packet)
            "handler:RetrieveLedgerHandler" -> ":ParamChecker" : setPacket(packet)
            return
            loop For all paramType in the command packet
                note left: "Note: Params will be verified for correctness\nby ParamChecker singleton class before being\nset into the ledger instance."
                "handler:RetrieveLedgerHandler" -> "handler:RetrieveLedgerHandler" : handleSingleParam(packet, paramType)
                    alt "paramType = PARAM_DATE"
                        "handler:RetrieveLedgerHandler" ->":ParamChecker": checkAndReturnDate(paramType)
                        return date
                        "handler:RetrieveLedgerHandler" -> "ledgerList:LedgerList" : getIndexFromDate(date)
                        return index
                        note left: "Note: Set index to modify at entry list\nso that the entry of interest can be retrieved via regular\ngetter methods from entrylist"
                        "handler:RetrieveLedgerHandler" -> "ledgerList:LedgerList" : setIndexToModify(index)
                        return
                    else "paramType = PARAM_INDEX"
                        "handler:RetrieveLedgerHandler" ->":ParamChecker": checkAndReturnIndex(paramType, entryList)
                        return index
                        "handler:RetrieveLedgerHandler" -> "ledgerList:LedgerList" : setIndexToModify(index)
                        return
                    end
                return
            end
        return
   return
   == Removal of retrieved ledger from ledgerList ==
   manualTracker-> "ledgerList:LedgerList" : removeItemAtCurrIndex()
   note left "ledger:Ledger": "Note: The retrieved ledger will be deleted here."
   destroy "ledger:Ledger"
   return
return 
return


@enduml