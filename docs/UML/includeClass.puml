@startuml

!include style.puml
show member
skinparam arrowThickness 1.1

Class "{abstract} \n Command" as Command LOGIC_COLOR {
    + {abstract} execute(ui : Ui, access : Access,
    storage : Storage) : void
}

Class Ui UI_COLOR {
    + showToUser(message : String) : void
}

Class Storage STORAGE_COLOR {
    + removeChapterFromExclusionFile(moduleName : String, chapterName : String) : boolean
    + removeModuleFromExclusionFile(moduleName : String) : void
    + loadExclusionFile(filePath : String) : ArrayList<String>
    + loadChaptersFromSpecifiedModule(moduleName : String, filePath : String) : String[]
}

Class StorageLoad STORAGE_COLOR {
    # loadExclusionFile(filePath : String) : ArrayList<String>
}

Class StorageWrite STORAGE_COLOR {
    # removeChapterFromExclusionFile(moduleName : String, chapterName : String, filePath : String) : boolean
    # removeModuleFromExclusionFile(moduleName : String, filePath : String) : void
    - deleteEntryFromExclusionFile(moduleName : String, chapterName : String) : void
    - deleteModuleEntriesFromExclusionFile(moduleName : String, excludedChapters : ArrayList<String>, chaptersInModule : String[]) : void
    - updateExclusionFile(excludedChapters : ArrayList<String>, filePath : String) : void
}

Class "IncludeCommand" as IncludeCommand LOGIC_COLOR {
    + execute(ui : Ui , access : Access, storage : Storage) : void
    - attemptToInclude(ui : Ui, storage : Storage) : String
    - removeChapterFromExclusion(storage : Storage, ui : Ui) : String
    - removeModuleFromExclusion(storage : Storage, ui : Ui) : String
}

IncludeCommand -left[LOGIC_COLOR_T4]-|> Command
IncludeCommand .down[LOGIC_COLOR_T4].> Storage
Storage .left[LOGIC_COLOR_T4].> StorageLoad
Storage .down[LOGIC_COLOR_T4].> StorageWrite
IncludeCommand .up[LOGIC_COLOR_T4].> Ui

@enduml