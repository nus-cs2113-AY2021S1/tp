@startuml

!include style.puml
show member
skinparam arrowThickness 1.1

Class "{abstract} \n Command" as Command LOGIC_COLOR {
  + {abstract} execute(ui : Ui, access : Access,
  storage : Storage) : void
}

Class "{abstract} \n RemoveCommand" as RemoveCommand LOGIC_COLOR {
  + {abstract} execute(ui : Ui, access : Access,
  storage : Storage) : void
  # prepareResult(type : String, content : String,
  count : int) : String
}

Class "RemoveChapterCommand" as RemoveChapterCommand LOGIC_COLOR {
    + RemoveChapterCommand(removeIndex : int)
    - removeIndex : int
    + execute(ui : Ui , access : Access, storage : Storage) : void
    - removeChapter(access Access, storage Storage) : String
}

Class "Access" as Access MODEL_COLOR {
    + getModule() : Module
}

Class "Module" as Module MODEL_COLOR {
    + getChapters() : ChapterList
}

Class "ChapterList" as ChapterList MODEL_COLOR {
    + getAllChapters(): ArrayList<Chapter>
}

Class "Ui" as Ui UI_COLOR {
    + showToUser(message : String) : void
}

Class "Storage" as Storage STORAGE_COLOR {
    + deleteDirectory(directoryToBeDeleted : File) : boolean
    + removeChapterFromExclusionFile(moduleName : String,
    chapterName : String) : boolean
    + removeChapterFromDue(module : String, chapter : String)
}

RemoveCommand -left[LOGIC_COLOR_T4]-|> Command
RemoveChapterCommand -up[LOGIC_COLOR_T4]-|> RemoveCommand
RemoveChapterCommand .down[LOGIC_COLOR_T4].> Storage
RemoveChapterCommand .left[LOGIC_COLOR_T4].> Ui
RemoveChapterCommand .up[LOGIC_COLOR_T4].> Access
RemoveChapterCommand .right[LOGIC_COLOR_T4].> Module
RemoveChapterCommand .right[LOGIC_COLOR_T4].> ChapterList
Access *-down[MODEL_COLOR]-> "    0..1" Module
Module *-down[MODEL_COLOR]-> "   0..1" ChapterList
Storage -right[HIDDEN]-> ChapterList

@enduml