@startuml
!include style.puml
show member
skinparam arrowThickness 1.1

Class "{abstract}\nCommand" as Command LOGIC_COLOR {
    + {abstract} execute(ui : Ui, access : Access, storage : Storage) : void
}
Class "{abstract}\nEditCommand" as EditCommand LOGIC_COLOR {
    + {abstract} execute(ui : Ui, access : Access, storage : Storage) : void
    # prepareBeforeEdit(type : String, content : String) : String
    # prepareAfterEdit(type : String, content : String) : String
}
Class EditModuleCommand LOGIC_COLOR {
    - editIndex : int
    - module : String
    + EditModuleCommand(editIndex : int, module : String)
    + execute(ui : Ui, access : Access, storage : Storage) : void
    - editModule(access : Access, storage : Storage) : String
}

Class Access MODEL_COLOR {
    + getAdmin() : Admin
}
Class Admin MODEL_COLOR {
    + getModules() : ModuleList
}
Class ModuleList MODEL_COLOR {
    + getModule(moduleIndex : int) : Module
    + checkModuleExistence(newModuleName : String) : boolean
}
Class Module MODEL_COLOR {
    # moduleName : String
    + setModuleName(moduleName : String)
}

Class Storage STORAGE_COLOR {
    + renameModule(newModuleName : String,
    module : Module) : void
}

Class Ui UI_COLOR {
    + showToUser(message : String) : void
}

EditCommand -up[LOGIC_COLOR_T4]-|> Command
EditModuleCommand -up[LOGIC_COLOR_T4]-|> EditCommand

EditModuleCommand .down[LOGIC_COLOR_T4].> Access
EditModuleCommand .down[LOGIC_COLOR_T4].> Storage
EditModuleCommand .down[LOGIC_COLOR_T4].> Ui

Access -left[MODEL_COLOR_T4]-> " 0..1 " Admin

Admin *-up[MODEL_COLOR_T4]-> " 0..1 " ModuleList
ModuleList *-up[MODEL_COLOR_T4]-> " * " Module


EditModuleCommand .down[LOGIC_COLOR_T4].> Admin
EditModuleCommand .left[LOGIC_COLOR_T4].> ModuleList
EditModuleCommand .up[LOGIC_COLOR_T4].> Module

@enduml
