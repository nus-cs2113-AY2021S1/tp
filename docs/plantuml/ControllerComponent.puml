@startuml
skinparam Shadowing false
skinparam MinClassWidth 100
skinparam classBackgroundColor LightSalmon
skinparam packageStyle rectangle
skinparam ArrowColor Salmon
hide circle
hide members

package Controller {

    class ControlManager {
        userInput: String
        model: Model
        runLogic()
    }

    Package Parser {
        class ModelExtractor {
            model: Model
            modelType: ModelType
            retriveModel()
        }
        class CommandParser {
            separatedInputs: String[]
            extractCommand() : CommandType
        }
        class ModelParser {
            separatedInputs: String[]
            extractModel() : ModelType
        }

'        enum "<<enum>>\nCommandType" {
'          ADD
'          DELETE
'          DONE
'          LIST
'          HELP
'          BYE
'        }
'
'        enum "<<enum>>\nModelType" {
'          EVENT
'          CLASS
'          CCA
'          TEST
'          TUITION
'          QUIZ
'          CONTACT
'        }
    }

    Package Command {
        class CommandFactory {
            userInput: String
            generateActionableCommand()
        }
        class ChildCommand
        class "{abstract}\nCommand" {
            userInput: String
            execute(DataManager) { abstract }
        }
    }
}

Package Model {
}

ControlManager .down> CommandParser
ControlManager ..down> ModelParser
ControlManager ..> CommandFactory
ControlManager ---> Model
ControlManager .left> ModelExtractor
CommandFactory .right> ChildCommand : creates >
ControlManager .> "{abstract}\nCommand" : executes >
ChildCommand -|> "{abstract}\nCommand"
"{abstract}\nCommand" ..up> Model
'CommandParser -> "<<enum>>\nCommandType"
'ModelParser -left> "<<enum>>\nModelType"
'CommandFactory -> "<<enum>>\nCommandType"

@enduml